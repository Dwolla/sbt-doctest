> show libraryDependencies
> clean
> + test:compile
 
$ exists target/scala-2.10/src_managed/test/sbt_doctest/MainDoctest.scala
$ exists target/scala-2.11/src_managed/test/sbt_doctest/MainDoctest.scala
$ exists target/scala-2.12/src_managed/test/sbt_doctest/MainDoctest.scala
$ absent target/scala-2.10/src_managed/test/sbt_doctest/NoDoctestDoctest.scala
$ absent target/scala-2.11/src_managed/test/sbt_doctest/NoDoctestDoctest.scala
$ absent target/scala-2.12/src_managed/test/sbt_doctest/NoDoctestDoctest.scala
$ exists target/scala-2.10/src_managed/test/sbt_doctest/VerbatimTestDoctest.scala
$ exists target/scala-2.11/src_managed/test/sbt_doctest/VerbatimTestDoctest.scala
$ exists target/scala-2.12/src_managed/test/sbt_doctest/VerbatimTestDoctest.scala
$ exists target/scala-2.10/src_managed/test/READMEmd0Doctest.scala
$ exists target/scala-2.11/src_managed/test/READMEmd0Doctest.scala
$ exists target/scala-2.12/src_managed/test/READMEmd0Doctest.scala
$ absent target/scala-2.10/src_managed/test/sbt_doctest/IgnoreMeDoctest.scala
$ absent target/scala-2.11/src_managed/test/sbt_doctest/IgnoreMeDoctest.scala
$ absent target/scala-2.12/src_managed/test/sbt_doctest/IgnoreMeDoctest.scala

# Try with utest
> reload
> clean
> set doctestTestFramework := DoctestTestFramework.MicroTest
> doctestTestFramework
> + test
 
# Try with scalatest
> reload
> clean
> set doctestTestFramework := DoctestTestFramework.ScalaTest
> doctestTestFramework
> + test
> existsInFile "with _root_.org.scalatest.prop.Checkers" target/scala-2.11/src_managed/test/sbt_doctest/MainDoctest.scala

# Try with specs2
> reload
> clean
> set doctestTestFramework := DoctestTestFramework.Specs2
> doctestTestFramework
> + test
 
# Try with scalacheck
> reload
> clean
> set doctestTestFramework := DoctestTestFramework.ScalaCheck
> doctestTestFramework
> + test

# Try with minitest
> reload
> clean
> set doctestTestFramework := DoctestTestFramework.Minitest
> doctestTestFramework
> + test
